int dp[101][101];
bool help(string a,string b,string c,int n,int m,int l)
{
    if(l==0)
        return 1;
    if(dp[n][m]!=-1)
        return dp[n][m];
    bool z,x;
    z=false;
    x=false;
    if(n-1>=0 and a[n-1]==c[l-1])
        z=help(a,b,c,n-1,m,l-1);
    if(m-1>=0 and b[m-1]==c[l-1])
        x=help(a,b,c,n,m-1,l-1);
    dp[n][m]=z or x;
    return dp[n][m];
    
}
class Solution{
  public:
    /*You are required to complete this method */
    bool isInterleave(string a, string b, string c) 
    {
        //Your code her
        int n=a.length();
        int m=b.length();
        int l=c.length();
        memset(dp,-1,sizeof(dp));
        if(n+m!=l)
            return 0;
        return help(a,b,c,n,m,l);
    }
