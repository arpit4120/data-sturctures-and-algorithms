link-https://practice.geeksforgeeks.org/problems/check-if-linked-list-is-pallindrome/1#
code
Node* reverse(Node *h)
{
    Node *p=NULL,*n=NULL;
    while(h!=NULL)
    {
        n=h->next;
        h->next=p;
        p=h;
        h=n;
        
    }
    return p;
}
bool isPalindrome(Node *head)
{
    //Your code here
    int n=0;
    Node *c=head;
    while(c!=NULL)
    {
        c=c->next;
        n++;
    }
    c=head;
    if(n%2==0)
    {
        c=head;
        for(int i=0;i<n/2-1;i++)
        {
            c=c->next;
        }
        
        Node *p=c->next;
        c->next=NULL;
        p=reverse(p);
        while(p!=NULL and head!=NULL)
        {
            if(p->data!=head->data)
                return false;
            p=p->next;
            head=head->next;
        }
        return true;
        
        
    }
    else
    {
        c=head;
        for(int i=0;i<n/2;i++)
        {
            c=c->next;
        }
        
        Node *p=c->next;
        c->next=NULL;
        p=reverse(p);
        while(p!=NULL and head!=NULL)
        {
            if(p->data!=head->data)
                return false;
            p=p->next;
            head=head->next;
        }
        return true;
        
        
    }
    
}
